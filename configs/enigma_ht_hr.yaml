dataset_name: enigma
train_split: ['train']
val_split: ['valid']
dataset: {
  json_file: ./data/enigma/annotations/enigma_ht_hr.json,
  feat_folder: ./data/enigma/features,
  file_prefix: ~,
  file_ext: .npy,
  num_classes: 2, # negative data are excluded
  input_dim: 3072,
  feat_stride: 6,
  num_frames: 6,
  # serve as data augmentation
  trunc_thresh: 0.5,
  crop_ratio: [0.9, 1.0],
  max_seq_len: 8192, # DA MODIFICARE. Num max feat video = 11791. 
                     # Deve essere multiplo di fpn_strides * self.mha_win_size

  # self.fpn_strides = [scale_factor**i for i in range(
  #     fpn_start_level, backbone_arch[-1]+1
  # )]

}
model: {
  # backbone_arch: !!python/tuple [2, 2, 5],
  backbone_arch: !!python/tuple [2, 2, 2], #last param = num of reg blocks (len of regression_range) - 1
  regression_range: [[0, 2], [2, 5], [5, 10000]],
  #regression_range: [[0, 4], [2, 8], [4, 16], [8, 32], [16, 64], [32, 10000]], EPIC
  # regression_range: [[0, 4], [4, 8], [8, 16], [16, 32], [32, 64], [64, 10000]],
  fpn_type: identity,
  # max_buffer_len_factor: 6.0, THUMOS
  # n_mha_win_size: 19,   THUMOS
  max_buffer_len_factor: 4.0,
  # n_mha_win_size: 9,
  n_mha_win_size: 5,
}
opt: {
  learning_rate: 0.0001,
  epochs: 60,
  warmup_epochs: 5,
  weight_decay: 0.05,
}
loader: {
  batch_size: 2,
}
train_cfg: {
  # init_loss_norm: 100, THUMOS
  init_loss_norm: 250, # EPIC
  clip_grad_l2norm: 1.0,
  cls_prior_prob: 0.01,
  center_sample: radius,
  center_sample_radius: 1.5,
}
test_cfg: {
  voting_thresh: 0.7,
  pre_nms_topk: 2000,
  max_seg_num: 200,
  min_score: 0.001,
  # when using external scores, our model is generating "proposals"
  # multiclass_nms: False,
  # ext_score_file: ./data/thumos/annotations/thumos14_cls_scores.pkl,
  # comment out L47-48 and uncomment L50 to disable score fusion
  multiclass_nms: True,
}
output_folder: ./outputs/